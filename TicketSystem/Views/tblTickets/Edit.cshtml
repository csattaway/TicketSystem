@model TicketSystem.Models.tblTicket

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>
@using (Html.BeginForm())
{
if (User.Identity.Name.ToString() == "csattaway@gmail.com")
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.idsTicket)

        <div class="form-group">
            @Html.LabelFor(model => model.idsSeverityType, "Severity", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("idsSeverityType", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.idsSeverityType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dtmCreate, "Current date (mm/dd/yyyy)", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dtmCreate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.dtmCreate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.idsUserCreate, "User Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("idsUserCreate", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.idsUserCreate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.txtIssue, "Issue", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.txtIssue, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.txtIssue, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.blnResolved, "Issue Resolved?", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.blnResolved)
                    @Html.ValidationMessageFor(model => model.blnResolved, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
} else 
{
    <p>You are not authorized to edit open tickets</p>
}
}


<div>
    @Html.ActionLink("Back to Tickets", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
